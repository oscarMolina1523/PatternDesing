interface PlayerState {
  play(): void;
  pause(): void;
  stop(): void;
}

class MusicPlayer {
  private state!: PlayerState;

  constructor(initialState: PlayerState) {
    this.setState(initialState);
  }

  public setState(state: PlayerState) {
    console.log(`üéµ Estado actual: ${state.constructor.name}`);
    this.state = state;
    this.state.setContext(this);
  }

  public play() {
    this.state.play();
  }

  public pause() {
    this.state.pause();
  }

  public stop() {
    this.state.stop();
  }
}

class PlayingState implements PlayerState {
  private context: MusicPlayer;

  public setContext(context: MusicPlayer) {
    this.context = context;
  }

  public play() {
    console.log("üîÅ Ya est√° reproduciendo.");
  }

  public pause() {
    console.log("‚è∏Ô∏è Pausando la m√∫sica...");
    this.context.setState(new PausedState());
  }

  public stop() {
    console.log("‚èπÔ∏è Deteniendo la m√∫sica...");
    this.context.setState(new StoppedState());
  }
}

class PausedState implements PlayerState {
  private context: MusicPlayer;

  public setContext(context: MusicPlayer) {
    this.context = context;
  }

  public play() {
    console.log("‚ñ∂Ô∏è Reanudando la m√∫sica...");
    this.context.setState(new PlayingState());
  }

  public pause() {
    console.log("‚è∏Ô∏è Ya est√° en pausa.");
  }

  public stop() {
    console.log("‚èπÔ∏è Deteniendo desde pausa...");
    this.context.setState(new StoppedState());
  }
}

class StoppedState implements PlayerState {
  private context!: MusicPlayer;

  public setContext(context: MusicPlayer) {
    this.context = context;
  }

  public play() {
    console.log("‚ñ∂Ô∏è Empezando a reproducir...");
    this.context.setState(new PlayingState());
  }

  public pause() {
    console.log("‚è∏Ô∏è No puedes pausar si est√° detenido.");
  }

  public stop() {
    console.log("‚èπÔ∏è Ya est√° detenido.");
  }
}

//ejemplo de cliente
const player = new MusicPlayer(new StoppedState());

player.play();   // ‚ñ∂Ô∏è Empezando a reproducir...
player.pause();  // ‚è∏Ô∏è Pausando la m√∫sica...
player.play();   // ‚ñ∂Ô∏è Reanudando la m√∫sica...
player.stop();   // ‚èπÔ∏è Deteniendo la m√∫sica...
player.pause();  // ‚è∏Ô∏è No puedes pausar si est√° detenido.
